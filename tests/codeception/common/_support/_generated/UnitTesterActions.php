<?php //[STAMP] 6737989f202bfdc0555e6d253faf6e9e
namespace tests\codeception\common\_generated;

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile

use tests\codeception\common\Helper\MigratorHelper;
use tests\codeception\common\Helper\ConfiguratorHelper;

trait UnitTesterActions
{
    /**
     * @return \Codeception\Scenario
     */
    abstract protected function getScenario();


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \tests\codeception\common\Helper\MigratorHelper::getMigrationTable()
     */
    public function getMigrationTable()
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getMigrationTable', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \tests\codeception\common\Helper\MigratorHelper::getMigrator()
     */
    public function getMigrator()
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getMigrator', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Check migration result
     *
     * @param $migrationName
     * @return bool
     * @throws \yii\base\NotSupportedException
     * @see \tests\codeception\common\Helper\MigratorHelper::migrationResult()
     */
    public function migrationResult($migrationName)
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('migrationResult', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * Drop table by name (need to manually drop all tables from DB since phpunit clears only data)
     *
     * @param array $tables
     * @throws \yii\base\NotSupportedException
     * @throws \yii\db\Exception
     * @see \tests\codeception\common\Helper\MigratorHelper::dropTables()
     */
    public function dropTables($tables)
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('dropTables', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \tests\codeception\common\Helper\ConfiguratorHelper::getConfigurator()
     */
    public function getConfigurator()
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('getConfigurator', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * @param array $configurationPaths
     * @return Configurator
     * @see \tests\codeception\common\Helper\ConfiguratorHelper::setConfigurator()
     */
    public function setConfigurator($configurationPaths = null)
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('setConfigurator', func_get_args()));
    }


    /**
     * [!] Method is generated. Documentation taken from corresponding module.
     *
     * @param array $config
     * @return \yii\web\Application
     * @see \tests\codeception\common\Helper\ConfiguratorHelper::runApplication()
     */
    public function runApplication($config = null)
    {
        return $this->getScenario()->runStep(new \Codeception\Step\Action('runApplication', func_get_args()));
    }
}
